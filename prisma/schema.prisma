generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Application {
  id              String   @id @default(cuid())
  name            String
  birthYear       String
  gender          String
  phone           String
  email           String?
  location        String
  startMonth      String
  attendanceType  String
  occupation      String
  motivation      String
  expectations    String
  termsAgree      Boolean
  privacyAgree    Boolean
  marketingAgree  Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  applicationDate DateTime @default(now())
  status          String   @default("pending")

  @@index([phone])
  @@index([email])
  @@index([createdAt])
  @@index([status])
}

model Survey {
  id                 String   @id @default(cuid())
  supporterGroup     String
  participantName    String
  programType        String
  customProgramName  String?
  kindnessRating     String
  explanationRating  String
  satisfactionRating String
  recommendRating    String
  participateAgain   String
  participateLottery Boolean  @default(false)
  phone              String?
  goodPoints         String?
  improvements       String?
  additionalFeedback String?
  submittedAt        DateTime @default(now())
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@index([participantName])
  @@index([phone])
  @@index([submittedAt])
  @@index([programType])
}

model Announcement {
  id          String             @id @default(cuid())
  category    String
  title       String
  preview     String
  content     String
  views       Int                @default(0)
  publishedAt DateTime           @default(now())
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  viewRecords AnnouncementView[]

  @@index([category])
  @@index([publishedAt])
  @@index([createdAt])
}

model AnnouncementView {
  id             String       @id @default(cuid())
  announcementId String
  ipAddress      String
  viewedAt       DateTime     @default(now())
  viewDate       String
  announcement   Announcement @relation(fields: [announcementId], references: [id], onDelete: Cascade)

  @@unique([announcementId, ipAddress, viewDate])
  @@index([announcementId])
  @@index([ipAddress])
  @@index([viewDate])
}

model ExperienceApplication {
  id               String   @id @default(cuid())
  programType      String
  programTitle     String
  name             String
  phone            String
  age              String
  location         String
  preferredDate    String
  preferredTime    String
  message          String?
  agreement        Boolean  @default(false)
  depositAgreement Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  applicationDate  DateTime @default(now())
  status           String   @default("pending")

  @@index([phone])
  @@index([programType])
  @@index([preferredDate])
  @@index([status])
  @@index([createdAt])
}

model Coupon {
  id             String    @id @default(cuid())
  code           String    @unique
  recipientName  String?
  issueDate      DateTime  @default(now())
  expiryDate     DateTime
  isUsed         Boolean   @default(false)
  usedAt         DateTime?
  usedProgram    String?
  usedBy         String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  issuedBy       String?
  discountRate   Int?
  discountType   String    @default("trial")
  finalPrice     Int?
  isFirstTime    Boolean   @default(true)
  recipientPhone String?

  @@index([code])
  @@index([isUsed])
  @@index([recipientPhone])
  @@index([expiryDate])
  @@index([createdAt])
}

model UserExperienceHistory {
  id                   String   @id @default(cuid())
  userPhone            String
  userName             String?
  programType          String
  programTitle         String
  experienceDate       DateTime
  originalPrice        Int
  discountRate         Int
  finalPrice           Int
  isFirstTime          Boolean
  couponCode           String?
  dataCollectionAgreed Boolean  @default(true)
  marketingAgreed      Boolean  @default(false)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@unique([userPhone, programType])
  @@index([userPhone])
  @@index([programType])
  @@index([experienceDate])
}

model OutreachContact {
  id                String   @id @default(cuid())
  name              String
  phone             String
  interestedPrograms String[] // 관심 프로그램 배열
  location          String   @default("나주")
  preferredDay      String?  // 평일/주말/둘다
  preferredTimes    String[] // 가능한 시간대 배열 (오전/오후/저녁/주말오전/주말오후/주말저녁)
  specificTime      String?  // 구체적인 희망 시간 (예: "토요일 오후 2시")
  supporterName     String   // 서포터즈 이름
  supporterGroup    String   @default("나주") // 서포터즈 활동 지역
  agreedAt          DateTime @default(now())
  privacyAgreed     Boolean  @default(true)
  marketingAgreed   Boolean  @default(false)
  couponSent        Boolean  @default(false)
  couponSentAt      DateTime?
  notes             String?  // 추가 메모
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@index([phone])
  @@index([supporterName])
  @@index([createdAt])
  @@index([location])
}
