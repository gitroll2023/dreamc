// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Application {
  id              String   @id @default(cuid())
  
  // 기본 정보
  name            String
  birthYear       String
  gender          String
  phone           String
  email           String?
  
  // 수강 정보
  location        String
  startMonth      String
  attendanceType  String
  
  // 추가 정보
  occupation      String
  motivation      String
  expectations    String
  
  // 동의사항
  termsAgree      Boolean
  privacyAgree    Boolean
  marketingAgree  Boolean  @default(false)
  
  // 메타데이터 (한국 시간 기준)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  applicationDate DateTime @default(now())
  status          String   @default("pending") // pending, approved, rejected
  
  @@index([phone])
  @@index([email])
  @@index([createdAt])
  @@index([status])
}

model Survey {
  id                    String   @id @default(cuid())
  
  // 기본 정보
  supporterGroup        String
  participantName       String
  
  // 체험 프로그램 정보
  programType           String
  customProgramName     String?
  
  // 만족도 평가 (1-3 scale)
  kindnessRating        String
  explanationRating     String
  satisfactionRating    String
  recommendRating       String
  participateAgain      String
  
  // 추첨 이벤트
  participateLottery    Boolean  @default(false)
  phone                 String?
  
  // 피드백
  goodPoints            String?  @db.Text
  improvements          String?  @db.Text
  additionalFeedback    String?  @db.Text
  
  // 메타데이터 (한국 시간 저장)
  submittedAt           DateTime @default(now())
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  @@index([participantName])
  @@index([phone])
  @@index([submittedAt])
  @@index([programType])
}

model Announcement {
  id              String   @id @default(cuid())
  
  // 공지사항 정보
  category        String   // important, recruitment, event, notice
  title           String
  preview         String   @db.Text
  content         String   @db.Text
  
  // 메타데이터
  views           Int      @default(0)
  publishedAt     DateTime @default(now())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // 조회 기록
  viewRecords     AnnouncementView[]
  
  @@index([category])
  @@index([publishedAt])
  @@index([createdAt])
}

model AnnouncementView {
  id              String   @id @default(cuid())
  
  // 조회 정보
  announcementId  String
  announcement    Announcement @relation(fields: [announcementId], references: [id], onDelete: Cascade)
  ipAddress       String
  viewDate        String   // YYYY-MM-DD 형식의 날짜
  
  // 조회 시간 (한국 시간)
  viewedAt        DateTime @default(now())
  
  // IP당 공지사항별 하루에 1번만 조회수 증가를 위한 unique 제약
  @@unique([announcementId, ipAddress, viewDate])
  @@index([announcementId])
  @@index([ipAddress])
  @@index([viewDate])
}

model ExperienceApplication {
  id              String   @id @default(cuid())
  
  // 프로그램 정보
  programType     String   // perfume, baking, personal-color, board-game, calligraphy, photo, humanities
  programTitle    String   // 프로그램 제목
  
  // 신청자 정보
  name            String
  phone           String
  age             String   // 20s, 30s, 40s, 50s
  location        String   // yeosu, mokpo, hwasun, naju, other
  
  // 희망 일정
  preferredDate   String   // YYYY-MM-DD
  preferredTime   String   // morning, afternoon, evening
  
  // 추가 정보
  message         String?  @db.Text
  
  // 동의사항
  agreement       Boolean  @default(false)
  depositAgreement Boolean @default(false) // 인문학 프로그램용 예치금 동의
  
  // 메타데이터 (한국 시간 기준)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  applicationDate DateTime @default(now())
  status          String   @default("pending") // pending, confirmed, cancelled, completed
  
  @@index([phone])
  @@index([programType])
  @@index([preferredDate])
  @@index([status])
  @@index([createdAt])
}

model Coupon {
  id              String   @id @default(cuid())
  
  // 쿠폰 정보
  code            String   @unique // DC-XXXX-XXXX 형식
  recipientName   String?  // 수령인 이름 (선택사항)
  
  // 유효기간
  issueDate       DateTime @default(now())
  expiryDate      DateTime // 발급일로부터 15일 후
  
  // 사용 정보
  isUsed          Boolean  @default(false)
  usedAt          DateTime?
  usedProgram     String?  // 사용한 프로그램
  usedBy          String?  // 사용자 정보
  
  // 메타데이터
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  issuedBy        String?  // 서포터즈 정보 (추후 확장용)
  
  @@index([code])
  @@index([isUsed])
  @@index([expiryDate])
  @@index([createdAt])
}